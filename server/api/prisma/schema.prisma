generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model User {
  id                                                 Int            @id @default(autoincrement())
  first_name                                         String         @db.VarChar(32)
  last_name                                          String         @db.VarChar(32)
  username                                           String         @unique @db.VarChar(32)
  password                                           String         @db.VarChar(32)
  sex                                                String         @db.VarChar(4)
  date_of_birth                                      DateTime       @db.Date
  profile_picture                                    String
  is_opthamologist                                   Boolean
  status                                             String         @db.VarChar(7)
  phone                                              Json?
  email                                              Json?
  chat                                               chat[]
  conversation_conversation_ophthalmologist_idToUser conversation[] @relation("conversation_ophthalmologist_idToUser")
  conversation_conversation_user_idToUser            conversation[] @relation("conversation_user_idToUser")
  scan                                               scan[]
}

model chat {
  id              Int          @id @default(autoincrement())
  conversation_id Int
  sender_id       Int
  chat            String       @db.VarChar(255)
  timestamp       DateTime     @default(now()) @db.Timestamp(6)
  status          String       @db.VarChar(9)
  conversation    conversation @relation(fields: [conversation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User            User         @relation(fields: [sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model conversation {
  id                                         Int    @id @default(autoincrement())
  user_id                                    Int?
  ophthalmologist_id                         Int?
  chat                                       chat[]
  User_conversation_ophthalmologist_idToUser User?  @relation("conversation_ophthalmologist_idToUser", fields: [ophthalmologist_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User_conversation_user_idToUser            User?  @relation("conversation_user_idToUser", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model scan {
  id          Int      @id @default(autoincrement())
  user_id     Int?
  datetime    DateTime @db.Timestamp(6)
  description String?  @db.VarChar(255)
  va          Json?
  photo       Json?
  User        User?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
